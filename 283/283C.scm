(define (f v i t boo boo0)
  (if (= i (vector-length v))
    t
    (if (= i 0)
      (if (eq? (vector-ref v i) #\0)
        (f v (+ i 1) t boo (eq? (vector-ref v i) #\0))
        (f v (+ i 1) (+ t 1) boo (eq? (vector-ref v i) #\0))
      )
      (if (eq? boo0 #t)
        (if (eq? (vector-ref v i) #\0)
          (f v (+ i 1) t boo (eq? (vector-ref v i) #\0))
          (f v (+ i 1) (+ t 1) boo #f)
        )
        (if (eq? (vector-ref v i) #\0)
          (cond
            ((= boo 1) (f v (+ i 1) t 0 boo0))
            ((= boo 0) (f v (+ i 1) (+ t 1) 1 boo0))
          )
          (cond
            ((= boo 1) (f v (+ i 1) (+ t 1) 0 boo0))
            ((= boo 0) (f v (+ i 1) (+ t 1) 0 boo0))
          )
        )
      )
    )
  )
)

(let ([S (read-line)])
  (define vs (list->vector (string->list S)))
  (display (f vs 0 0 0 #f))
)
