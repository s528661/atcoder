(define (f n i V)
  (if (= i n)
    V
    (let ((v (read)))
      (vector-set! V i v)
      (f n (+ i 1) V)
    )
  )
)

(define (g i j p q k)
  (if (= i (vector-length p))
    (display "No")
    (if (= j (vector-length q))
      (g (+ i 1) 0 p q k)
      (if (= (+ (vector-ref p i) (vector-ref q j)) k)
        (display "Yes")
        (g i (+ j 1) p q k)
      )
    )
  )
)

(let ([N (read)][K (read)])
  (define P (make-vector N))
  (define Q (make-vector N))
  (g 0 0 (f N 0 P) (f N 0 Q) K)
)
